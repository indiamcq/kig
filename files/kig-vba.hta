<html>
<head><!--
*******************************************************************************
*  Create GUI for KIG bat file.                                               *
*                                                                             *
******************************************************************************* -->
  <meta http-equiv="Content-Type" content="text/html; charset=windows-1250">
  <title>KIG - K Image Gallery processor</title>
  <HTA:application 
  applicationName="kig app" 
  singleinstance="yes"
  />
  <style type="text/css">
  /* <![CDATA[ */
  BODY {

    border: thin white solid;
    margin: 10px 10px 10px 10px;
    font: 11px Verdana;  
  }
  button {width:220px}
  .label {padding-top:10pt}
  /* ]]> */
  </style>
  <script language="vbscript">
Option Explicit
Dim iniFile, siteInput, gallerynameInput, usercolorInput, inputPicPath
Dim strPath 
Dim picPath
dim shell
Dim objShell
Set objShell = CreateObject("Wscript.Shell")

iniFile = "C:\ProgramData\kig\gui.ini"
picPath = "C:\users\%username%\Pictures\"
' strPath = SelectFolder( picPath )
siteInput = ReadIni(iniFile,"gui","site")




Sub RunScript1
  Msgbox "The script has run. " + ShowSelectedFolder.Value + " " + site
  objShell.run("%comspec% /c C:\programs\kig\kigg.cmd DirToProcess site galleryname.value style.value usercolor.value")
'  shell.Run "%comspec% /c C:\programs\kig\kigg.cmd SelectedFolder.value site.value galleryname.value style.value usercolor.value", 0, True
End Sub
  

Function ReadIni( myFilePath, mySection, myKey )
    ' This function returns a value read from an INI file
    '
    ' Arguments:
    ' myFilePath  [string]  the (path and) file name of the INI file
    ' mySection   [string]  the section in the INI file to be searched
    ' myKey       [string]  the key whose value is to be returned
    '
    ' Returns:
    ' the [string] value for the specified key in the specified section
    '
    ' CAVEAT:     Will return a space if key exists but value is blank
    '
    ' Written by Keith Lacelle
    ' Modified by Denis St-Pierre and Rob van der Woude

    Const ForReading   = 1
    Const ForWriting   = 2
    Const ForAppending = 8

    Dim intEqualPos
    Dim objFSO, objIniFile
    Dim strFilePath, strKey, strLeftString, strLine, strSection

    Set objFSO = CreateObject( "Scripting.FileSystemObject" )

    ReadIni     = ""
    strFilePath = Trim( myFilePath )
    strSection  = Trim( mySection )
    strKey      = Trim( myKey )

    If objFSO.FileExists( strFilePath ) Then
        Set objIniFile = objFSO.OpenTextFile( strFilePath, ForReading, False )
        Do While objIniFile.AtEndOfStream = False
            strLine = Trim( objIniFile.ReadLine )

            ' Check if section is found in the current line
            If LCase( strLine ) = "[" & LCase( strSection ) & "]" Then
                strLine = Trim( objIniFile.ReadLine )

                ' Parse lines until the next section is reached
                Do While Left( strLine, 1 ) <> "["
                    ' Find position of equal sign in the line
                    intEqualPos = InStr( 1, strLine, "=", 1 )
                    If intEqualPos > 0 Then
                        strLeftString = Trim( Left( strLine, intEqualPos - 1 ) )
                        ' Check if item is found in the current line
                        If LCase( strLeftString ) = LCase( strKey ) Then
                            ReadIni = Trim( Mid( strLine, intEqualPos + 1 ) )
                            ' In case the item exists but value is blank
                            If ReadIni = "" Then
                                ReadIni = " "
                            End If
                            ' Abort loop when item is found
                            Exit Do
                        End If
                    End If

                    ' Abort if the end of the INI file is reached
                    If objIniFile.AtEndOfStream Then Exit Do

                    ' Continue with next line
                    strLine = Trim( objIniFile.ReadLine )
                Loop
            Exit Do
            End If
        Loop
        objIniFile.Close
    Else
        WScript.Echo strFilePath & " doesn't exists. Exiting..."
        Wscript.Quit 1
    End If
End Function

Sub WriteIni( myFilePath, mySection, myKey, myValue )
    ' This subroutine writes a value to an INI file
    '
    ' Arguments:
    ' myFilePath  [string]  the (path and) file name of the INI file
    ' mySection   [string]  the section in the INI file to be searched
    ' myKey       [string]  the key whose value is to be written
    ' myValue     [string]  the value to be written (myKey will be
    '                       deleted if myValue is <DELETE_THIS_VALUE>)
    '
    ' Returns:
    ' N/A
    '
    ' CAVEAT:     WriteIni function needs ReadIni function to run
    '
    ' Written by Keith Lacelle
    ' Modified by Denis St-Pierre, Johan Pol and Rob van der Woude

    Const ForReading   = 1
    Const ForWriting   = 2
    Const ForAppending = 8

    Dim blnInSection, blnKeyExists, blnSectionExists, blnWritten
    Dim intEqualPos
    Dim objFSO, objNewIni, objOrgIni, wshShell
    Dim strFilePath, strFolderPath, strKey, strLeftString
    Dim strLine, strSection, strTempDir, strTempFile, strValue

    strFilePath = Trim( myFilePath )
    strSection  = Trim( mySection )
    strKey      = Trim( myKey )
    strValue    = Trim( myValue )

    Set objFSO   = CreateObject( "Scripting.FileSystemObject" )
    Set wshShell = CreateObject( "WScript.Shell" )

    strTempDir  = wshShell.ExpandEnvironmentStrings( "%TEMP%" )
    strTempFile = objFSO.BuildPath( strTempDir, objFSO.GetTempName )

    Set objOrgIni = objFSO.OpenTextFile( strFilePath, ForReading, True )
    Set objNewIni = objFSO.CreateTextFile( strTempFile, False, False )

    blnInSection     = False
    blnSectionExists = False
    ' Check if the specified key already exists
    blnKeyExists     = ( ReadIni( strFilePath, strSection, strKey ) <> "" )
    blnWritten       = False

    ' Check if path to INI file exists, quit if not
    strFolderPath = Mid( strFilePath, 1, InStrRev( strFilePath, "\" ) )
    If Not objFSO.FolderExists ( strFolderPath ) Then
        WScript.Echo "Error: WriteIni failed, folder path (" _
                   & strFolderPath & ") to ini file " _
                   & strFilePath & " not found!"
        Set objOrgIni = Nothing
        Set objNewIni = Nothing
        Set objFSO    = Nothing
        WScript.Quit 1
    End If

    While objOrgIni.AtEndOfStream = False
        strLine = Trim( objOrgIni.ReadLine )
        If blnWritten = False Then
            If LCase( strLine ) = "[" & LCase( strSection ) & "]" Then
                blnSectionExists = True
                blnInSection = True
            ElseIf InStr( strLine, "[" ) = 1 Then
                blnInSection = False
            End If
        End If

        If blnInSection Then
            If blnKeyExists Then
                intEqualPos = InStr( 1, strLine, "=", vbTextCompare )
                If intEqualPos > 0 Then
                    strLeftString = Trim( Left( strLine, intEqualPos - 1 ) )
                    If LCase( strLeftString ) = LCase( strKey ) Then
                        ' Only write the key if the value isn't empty
                        ' Modification by Johan Pol
                        If strValue <> "<DELETE_THIS_VALUE>" Then
                            objNewIni.WriteLine strKey & "=" & strValue
                        End If
                        blnWritten   = True
                        blnInSection = False
                    End If
                End If
                If Not blnWritten Then
                    objNewIni.WriteLine strLine
                End If
            Else
                objNewIni.WriteLine strLine
                    ' Only write the key if the value isn't empty
                    ' Modification by Johan Pol
                    If strValue <> "<DELETE_THIS_VALUE>" Then
                        objNewIni.WriteLine strKey & "=" & strValue
                    End If
                blnWritten   = True
                blnInSection = False
            End If
        Else
            objNewIni.WriteLine strLine
        End If
    Wend

    If blnSectionExists = False Then ' section doesn't exist
        objNewIni.WriteLine
        objNewIni.WriteLine "[" & strSection & "]"
            ' Only write the key if the value isn't empty
            ' Modification by Johan Pol
            If strValue <> "<DELETE_THIS_VALUE>" Then
                objNewIni.WriteLine strKey & "=" & strValue
            End If
    End If

    objOrgIni.Close
    objNewIni.Close

    ' Delete old INI file
    objFSO.DeleteFile strFilePath, True
    ' Rename new INI file
    objFSO.MoveFile strTempFile, strFilePath

    Set objOrgIni = Nothing
    Set objNewIni = Nothing
    Set objFSO    = Nothing
    Set wshShell  = Nothing
End Sub

Function SelectFolder( myStartFolder )
' This function opens a "Select Folder" dialog and will
' return the fully qualified path of the selected folder
'
' Argument:
'     myStartFolder    [string]    the root folder where you can start browsing;
'                                  if an empty string is used, browsing starts
'                                  on the local computer
'
' Returns:
' A string containing the fully qualified path of the selected folder
'
' Written by Rob van der Woude
' http://www.robvanderwoude.com

    ' Standard housekeeping
    Dim objFolder, objItem, objShell
    
    ' Custom error handling
    On Error Resume Next
    SelectFolder = vbNull

    ' Create a dialog object
    Set objShell  = CreateObject( "Shell.Application" )
    Set objFolder = objShell.BrowseForFolder( 0, "Select Folder", 0, myStartFolder )

    ' Return the path of the selected folder
    If IsObject( objfolder ) Then SelectFolder = objFolder.Self.Path
    ShowSelectedFolder.Value = SelectFolder
    ReadIni
    
    ' my additions
    ' gallerynameInput = ReadIni(iniFile,"gui","galleryname")
        usercolorInput = ReadIni(iniFile,"gui","usercolor")
        inputPicPath = ReadIni(iniFile,"gui","PicPath")
    site.Value = ReadIni(iniFile,"gui","site")
    galleryname.value = gallerynameInput
    usercolor.value = usercolorInput
    
    ' Standard housekeeping
    Set objFolder = Nothing
    Set objshell  = Nothing
    On Error Goto 0
End Function

Sub ShowValue
    ShowSelectedFolder.Value = .SelectFolder
    site.Value = "xxx"
    galleryname.value = "gal"
    usercolor.value = "red"
End Sub

  </script>
  <SCRIPT language="JavaScript">
window.resizeTo(480,700);


</SCRIPT>
</head>
<body >
 <input id=runbutton  class="button" type="button" value="1. Click here to select your picture folder" 
name="DirToProcess"  onClick="SelectFolder(picPath)" onChange="">
<input type="text" name="ShowSelectedFolder" size="60" maxLength="255" > <br />

 <!-- <input id=runbutton  class="button" type="button" value="Select Your Picture Folder" 
name="DirToProcess"  onClick="SelectFolder(picPath)" onChange="">
<input type="text" name="ShowSelectedFolder" size="60" maxLength="255" ><br />-->
 <div class="label">2. Enter K site code</div>
 <input type="text" name="site" size="30"><br />
  <div class="label">3. Enter gallery name</div>
 <input type="text" name="galleryname" size="30"><br />
  <div class="label">4. Enter border color [optional]</div>
 <input type="text" name="usercolor" size="30"><br />

    <div class="label">5. Click border button style below </div>
   <button onclick="RunScript1" width="200px">No border</button><br />
   <button onclick="RunScript2">Solid color border</button><br />
   <button onclick="RunScript3">Inner bevel border</button><br />
   <button onclick="RunScript4">Embossed bevelled border</button><br />
   <button onclick="RunScript5">Rainbow border</button><br />
   <button onclick="RunScript6">Fuzzed edge border</button><br />
   <button onclick="RunScript7">Raised bevel border</button><br />
   <button onclick="RunScript8">Sunken bevel border</button><br />

</body>
</HTmL>
